{"version":3,"sources":["store/constants.js","store/store.js","store/reducers.js","components/Header.js","components/Footer.js","store/actions.js","components/Loader.js","components/Message.js","components/Paginate.js","screens/HomeScreen.js","App.js","reportWebVitals.js","index.js"],"names":["COMPANY_LIST_BYNUMBER_REQUEST","COMPANY_LIST_BYNUMBER_SUCCESS","COMPANY_LIST_BYNUMBER_FAIL","COMPANY_LIST_RESTRICT_REQUEST","COMPANY_LIST_RESTRICT_SUCCESS","COMPANY_LIST_RESTRICT_FAIL","reducer","combineReducers","companyList","state","companies","action","type","loading","payload","page","pages","total","length","error","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","Navbar","bg","variant","expand","collapseOnSelect","Container","Brand","href","Footer","Row","Col","className","listRestrictedCompanies","keyword","dispatch","a","axios","get","data","response","detail","message","Loader","Spinner","animation","role","style","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","map","x","to","Item","active","HomeScreen","history","useState","number","setNumber","valid","setValid","setDisplay","restrictedList","setRestrictedList","useDispatch","useSelector","location","search","useEffect","InputGroup","FormControl","placeholder","onChange","e","inputValue","target","value","newValue","replace","isNaN","Button","id","onClick","preventDefault","listCompanyByNumber","disabled","color","Table","company","company_name","description","tagline","company_email","business_number","restricted","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92d28eaa.chunk.js","sourcesContent":["export const COMPANY_LIST_BYNUMBER_REQUEST = 'COMPANY_LIST_BYNUMBER_REQUEST'\nexport const COMPANY_LIST_BYNUMBER_SUCCESS = 'COMPANY_LIST_BYNUMBER_SUCCESS'\nexport const COMPANY_LIST_BYNUMBER_FAIL = 'COMPANY_LIST_BYNUMBER_FAIL'\n\nexport const COMPANY_LIST_RESTRICT_REQUEST = 'COMPANY_LIST_RESTRICT_REQUEST'\nexport const COMPANY_LIST_RESTRICT_SUCCESS = 'COMPANY_LIST_RESTRICT_SUCCESS'\nexport const COMPANY_LIST_RESTRICT_FAIL = 'COMPANY_LIST_RESTRICT_FAIL'","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { companyListReducer } from './reducers'\n\nconst reducer = combineReducers({\n    companyList: companyListReducer,\n})\nconst initialState = {\n\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\nexport default store","import { \n    COMPANY_LIST_BYNUMBER_REQUEST,\n    COMPANY_LIST_BYNUMBER_SUCCESS,\n    COMPANY_LIST_BYNUMBER_FAIL,\n    COMPANY_LIST_RESTRICT_REQUEST,\n    COMPANY_LIST_RESTRICT_SUCCESS,\n    COMPANY_LIST_RESTRICT_FAIL\n } from './constants'\n\n\n export const companyListReducer = (state={companies:[]},action) => {\n    switch(action.type) {\n        case COMPANY_LIST_BYNUMBER_REQUEST:\n        case COMPANY_LIST_RESTRICT_REQUEST:\n            return {loading:true, companies: []}\n        case COMPANY_LIST_BYNUMBER_SUCCESS:\n            return {\n                loading:false, \n                companies: action.payload, \n                page: 1,\n                pages: 1,\n                total: action.payload.length\n            }\n        case COMPANY_LIST_RESTRICT_SUCCESS:\n            return {\n                loading:false, \n                companies: action.payload.companies, \n                page: action.payload.page,\n                pages: action.payload.pages,\n                total: action.payload.total,\n            }\n        case COMPANY_LIST_BYNUMBER_FAIL:\n        case COMPANY_LIST_RESTRICT_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}","import React from 'react'\nimport { Navbar, Container, } from 'react-bootstrap'\n\nfunction Header() {\n    return (\n        <header>\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <Navbar.Brand href=\"/\">Companies</Navbar.Brand>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">Copyright &copy; Jing</Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { \n    COMPANY_LIST_BYNUMBER_REQUEST,\n    COMPANY_LIST_BYNUMBER_SUCCESS,\n    COMPANY_LIST_BYNUMBER_FAIL,\n    COMPANY_LIST_RESTRICT_REQUEST,\n    COMPANY_LIST_RESTRICT_SUCCESS,\n    COMPANY_LIST_RESTRICT_FAIL\n } from './constants'\n \n import axios from 'axios'\n\n export const listRestrictedCompanies = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({type: COMPANY_LIST_RESTRICT_REQUEST})  \n        const { data } = await axios.get(`/api/companies${keyword}`)     \n        dispatch({\n            type: COMPANY_LIST_RESTRICT_SUCCESS,\n            payload: data\n        })\n    }catch(error) { \n        dispatch({\n            type: COMPANY_LIST_RESTRICT_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n        \n    }\n\n}\n\nexport const listCompanyByNumber = (number) => async (dispatch) => {\n    try {      \n        dispatch({type: COMPANY_LIST_BYNUMBER_REQUEST})\n        const { data } = await axios.get(`/api/companies/${number}`)\n        dispatch({\n            type:COMPANY_LIST_BYNUMBER_SUCCESS,\n            payload: data\n        })\n    }catch(error) {\n        dispatch({\n            type: COMPANY_LIST_BYNUMBER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })        \n    }\n\n}","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                height:'100px',\n                width:'100px',\n                margin:'auto',\n                display:'block',\n            }}\n        >\n            <span className='sr-only'>Loading...</span>    \n        </Spinner>\n    )\n}\n\nexport default Loader","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginate({ pages, page, keyword = ''}) {\n    if (keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n\n    return (pages > 1 && (\n        <Pagination>\n            {[...Array(pages).keys()].map((x) => (\n                <LinkContainer\n                    key={x + 1}\n                    to={`/?keyword=${keyword}&page=${x + 1}`}\n                >\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n           \n                </LinkContainer>\n            ))}\n        </Pagination>\n        )\n    )\n}\n\nexport default Paginate\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Container, Row, Col, InputGroup, Button, FormControl, Table } from 'react-bootstrap'\nimport { listCompanyByNumber, listRestrictedCompanies } from '../store/actions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\n\nfunction HomeScreen({history}) {\n    const [number, setNumber] = useState('')\n    const [valid, setValid] = useState(true)\n    const [display, setDisplay] = useState(false)\n    const [restrictedList, setRestrictedList] = useState(false)\n    const dispatch = useDispatch()\n    const companyList = useSelector(state => state.companyList)\n    const { companies, loading, error, page, pages, total } = companyList \n    let keyword = history.location.search\n\n    const searchByNumber = (e) => {\n        e.preventDefault()\n        if(number) {\n            dispatch(listCompanyByNumber(number))\n        }\n        setDisplay(true)\n        \n    }\n    const searchRestrictedCompanies = () =>{\n        dispatch(listRestrictedCompanies())\n        setDisplay(true)\n        setRestrictedList(true)\n    }\n    useEffect(() => {\n        if(restrictedList){\n            dispatch(listRestrictedCompanies(keyword))\n        }    \n    }, [dispatch, keyword, restrictedList])\n\n    const inputHandler =(e) => {\n        let  inputValue = e.target.value;\n        let newValue = inputValue.replace('-', '')\n        if(!isNaN(newValue)){\n            setValid(true);\n            setNumber(inputValue)\n        }\n        else {\n            setValid(false)\n        }\n    }\n\n    return (\n        <Container>\n            <Row >\n                <Col>\n                    <InputGroup className=\"mb-3\">\n                        <FormControl\n                        placeholder=\"Enter company business number\"\n                        aria-label=\"Company business number\"\n                        aria-describedby=\"basic-addon2\"\n                        onChange={inputHandler}\n                        />\n                        <Button variant=\"primary\" id=\"button-addon2\" onClick={searchByNumber} disabled={!valid}>\n                            Search\n                        </Button>\n                    </InputGroup>\n                    {!valid && (\n                        <div style={{ color: \"red\" }}>Only 0-9 and '-' is accepted</div>\n                    )}\n                </Col>\n                <Col className=\"justify-content-md-center\">\n                    <Button variant=\"outline-primary\" id=\"button-addon2\" onClick={searchRestrictedCompanies}>\n                            Show All Restricted Companies\n                    </Button>\n                </Col>\n            </Row>\n            <br></br>\n            {display && \n                <div>\n                { loading ? <Loader />\n                :error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <p>{total} result(s) found</p>\n                        <Table className=\"table table-hover\" >\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Company name</th>\n                                    <th>Description</th>\n                                    <th>Tagline</th>\n                                    <th>Company email</th>\n                                    <th>Business number</th>\n                                    <th>Restricted</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {companies?.map(company => (\n                                    <tr key={ company.id }>\n                                        <td>{ company.id }</td>\n                                        <td>{ company.company_name }</td>\n                                        <td>{ company.description }</td>\n                                        <td>{ company.tagline }</td>\n                                        <td>{ company.company_email}</td>\n                                        <td>{ company.business_number }</td>\n                                        <td>{ company.restricted }</td>\n                                    </tr>\n\n                                ) )}\n                            </tbody>\n                            \n                        </Table>\n                        <Paginate pages={pages} page={page}/>\n\n                    </div>\n            }\n                \n            </div>}\n\n\n        </Container>\n    )\n}\n\nexport default HomeScreen\n","import { Container } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header';\nimport Footer from './components/Footer'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport HomeScreen from './screens/HomeScreen';\n\nfunction App() {\n  return (\n    <Router >\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={ HomeScreen } exact/>\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}